datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  seed     = "node prisma/seed.js"
}

model User {
  id         Int        @id @default(autoincrement())
  email      String     @unique
  password   String
  role       String     @default("User")
  createdAt  DateTime   @default(now())
  tasks      Task[]
  Log        Log[]
  Categories Category[]
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String
  tasks     Task[]
  createdBy User?     @relation(fields: [userId], references: [id], onDelete: SetNull)
  userId    Int?
  createdAt DateTime @default(now())
}

model Task {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  status      String    @default("pending")
  priority    String
  dueDate     DateTime
  createdAt   DateTime  @default(now())
  createdBy   User?      @relation(fields: [userId], references: [id], onDelete: SetNull)
  userId      Int?
  comments    Comment[]
  Log         Log[]
  Category    Category  @relation(fields: [categoryId], references: [id])
  categoryId  Int       @default(1)
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  task      Task     @relation(fields: [taskId], references: [id])
  taskId    Int
  createdAt DateTime @default(now())
}

model Log {
  id        Int      @id @default(autoincrement())
  action    String
  content   Json     @default("{}")
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int
  task      Task?    @relation(fields: [taskId], references: [id])
  taskId    Int?
  createdAt DateTime @default(now())
}
